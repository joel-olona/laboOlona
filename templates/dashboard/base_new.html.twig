<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>{% block title %}{{ meta_title() }}{% endblock %}</title>
        <link rel="icon" href="{{ asset('images/favicon.ico')}}">
        <meta name="description" content="{{ meta_description() }}">
        <script>
            // Define dataLayer and the gtag function.
            window.dataLayer = window.dataLayer || [];
            function gtag(){dataLayer.push(arguments);}

            // Set default consent to 'denied' as a placeholder
            // Determine actual values based on your own requirements
            gtag('consent', 'default', {
                'ad_storage': 'denied',
                'ad_user_data': 'denied',
                'ad_personalization': 'denied',
                'analytics_storage': 'granted'
            });
        </script>
        <!-- Google tag (gtag.js) -->
        <script async src="https://www.googletagmanager.com/gtag/js?id=AW-10865325730"></script>
        <script>
            window.dataLayer = window.dataLayer || [];
            function gtag(){dataLayer.push(arguments);}

            gtag('js', new Date());
            gtag('config', 'AW-10865325730');
        </script>
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css"/>

        {% block stylesheets %}
            {{ encore_entry_link_tags('app') }}
        {% endblock %}

        {% block javascripts %}
            {{ encore_entry_script_tags('app') }}
	        <script src="{{asset('assets/errorLogger.js')}}"></script>
        {% endblock %}
    </head>
    <body>
        {% set include_nav = app.user ? 'parts/_nav_user.html.twig' : 'parts/_nav_default.html.twig' %}

        {% include include_nav %}

        <div class="bg-dark text-white pt-5">
            <div class="container-fluid">
                <div class="row">
                    <div class="col-lg-3 d-none d-lg-block mt-5">
                        {% block sidebar %}
                            {% if app.user.type == 'MODERATEUR' %}
                            {% include "dashboard/_sidebar_moderateur.html.twig" %} 
                            {% elseif app.user.type == 'ENTREPRISE' %}
                            {% include "dashboard/_sidebar_entreprise.html.twig" %} 
                            {% else %}
                            {% include "dashboard/_sidebar_candidat.html.twig" %} 
                            {% endif %}
                        {% endblock %}
                    </div>
                    <div class="col-lg-9 mt-4">
                        <div class="div-plein-ecran bg-light text-dark p-1 p-sm-3">
                            {% for message in app.flashes('success') %}
                                <div class="alert alert-success">
                                    {{ message }}
                                </div>
                            {% endfor %}
                            {% block body %}{% endblock %}
                            {% block inner_footer %}{% endblock %}
                        </div>
                    </div>
                </div>
            </div>
        </div>
        {% block footer %} {% include "parts/_footer.html.twig" %} {% endblock %}
        <!-- Create one update function for each consent parameter -->
        <script>
            // Fonction pour vérifier le consentement et l'expiration
            function checkCookieConsent() {
                let consentInfo = localStorage.getItem('cookieConsent');
                if (consentInfo) {
                    consentInfo = JSON.parse(consentInfo);
                    const expirationDate = new Date(consentInfo.expiryDate);
                    const now = new Date();
                    if (now > expirationDate) {
                        localStorage.removeItem('cookieConsent'); // Expire le consentement
                        return false;
                    }
                    return true;
                }
                return false;
            }

            window.onload = function() {
                if (checkCookieConsent()) {
                    document.querySelector('.cookie-consent').style.display = 'none';
                }
            }

            function consentGrantedAdStorage() {
                gtag('consent', 'update', {
                    'ad_storage': 'granted',
                    'ad_user_data': 'granted',
                    'ad_personalization': 'granted',
                    'analytics_storage': 'granted'
                });

                const now = new Date();
                const expiryDate = new Date(now.getFullYear(), now.getMonth(), now.getDate() + 30); // Expiration après 30 jours

                // Enregistrer le consentement avec la date d'expiration
                localStorage.setItem('cookieConsent', JSON.stringify({
                    status: 'granted',
                    expiryDate: expiryDate.toISOString()
                }));

                document.querySelector('.cookie-consent').style.display = 'none';
            }
        </script>
        {% block modal %}
        {% if app.user.type == 'CANDIDAT' %}
            {{ render(controller('App\\Controller\\Dashboard\\CandidatController::availabilityFormView')) }}
        {% endif %}
        {% endblock %}
             
            
        <script>
            document.addEventListener('DOMContentLoaded', function() {
                var fromDatePicker = document.querySelector('#availability_nom_1');
                var datePickerContainer = document.querySelector('.date-picker-container');
                var labelForFromDate = document.querySelector('label[for="availability_nom_1"]');
            
                if (labelForFromDate) {
                    var formCheck = labelForFromDate.closest('.form-check');
                    // Insérer le datePicker après le label "A partir du" tout en restant à l'intérieur de .form-check
                    formCheck.insertBefore(datePickerContainer, labelForFromDate.nextSibling);
                
                    // Appliquer les classes Bootstrap pour aligner les éléments
                    formCheck.classList.add('d-flex', 'align-items-center');
                    labelForFromDate.classList.add('flex-grow-1', 'mx-2'); // Assurez-vous que le label prend l'espace nécessaire
                    datePickerContainer.classList.add('flex-shrink-1'); // Empêcher le datePicker de s'étendre trop
                
                    // Ajouter/Retirer l'attribut required basé sur la sélection
                    var radios = document.querySelectorAll('input[name="availability[nom]"]');
                    radios.forEach(function(radio) {
                        radio.addEventListener('change', function() {
                            var isFromDateSelected = fromDatePicker.checked;
                            setDatePickerRequired(isFromDateSelected);
                        });
                    });
                
                    // Fonction pour ajuster l'attribut required du datePicker
                    function setDatePickerRequired(isRequired) {
                        ['day', 'month', 'year'].forEach(function(part) {
                            var element = document.querySelector('#availability_dateFin_' + part);
                            if (element) {
                                element.required = isRequired;
                            }
                        });
                    }
                
                    // Vérifier l'état initial
                    setDatePickerRequired(fromDatePicker.checked);
                }
            });
            </script>
    </body>
</html>
